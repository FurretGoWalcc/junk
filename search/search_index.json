{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Obsidian Notes","text":"<p>Publish your public notes with MkDocs</p>"},{"location":"#hello-world","title":"Hello World!","text":"<p>The <code>index.md</code> in the <code>/docs</code> folder is the homepage you see here.</p> <p>The folders in <code>/docs</code> appear as the main sections on the navigation bar.</p> <p>The notes appear as pages within these sections. For example, Note 1 in <code>Topic 1</code></p>"},{"location":"DSP/Aliasing/","title":"Aliasing","text":""},{"location":"DSP/Aliasing/#basics","title":"Basics","text":"What is Aliasing <ul> <li>Aliasing is an effect of our Discrete-Time definition that causes different signals to become indistinguishable (aliases of one another, when sampled)</li> <li>In the example below, these two different waveforms appear identical when sampled<ul> <li></li> </ul> </li> <li>In other words, there's multiple solutions which satisfies the \\(x[n]\\) for any given problem.</li> </ul> When does Aliasing Occur + The Nyquist Frequency <ul> <li>Aliasing occurs when \\(\\(\\large F_{signal} \\ge \\frac{F_{s}}{2}\\)\\)</li> <li>The Nyquist Frequency \\(\\large F_\\text{Nyquist}=2|F_\\text{signal}|&lt;F_s\\) defines the minimum which the sampling frequency must exceed to avoid aliasing, aka the maximum input frequency at a given sampling frequency to avoid aliasing.</li> </ul> <p>We could never learn to be brave and patient if there were only joy in the world. \u2014 Helen Keller</p>"},{"location":"DSP/Block%20Diagrams/","title":"Block Diagrams","text":"<p>Well done is better than well said. \u2014 Benjamin Franklin</p>"},{"location":"DSP/Bounded%20Input%20Bounded%20Output%20Stability/","title":"Bounded Input Bounded Output Stability","text":"<p>BIBO</p> <ul> <li>Bounded means finite</li> <li>BIBO Stable means that any bounded input will produce a bounded output.</li> <li>An DT LTI system is BIBO Stable if and only if h[n] is absolutely summable. This is easy to prove for signals which are finite in length, or those which are finite periodic sequencues, but some signals grow without bound. </li> <li>This is more or less a review of Calc2, divergence and convergence. \\(\\(\\sum\\limits_{k=-\\infty}^{\\infty}{\\big|h[k]\\big|}&lt; \\infty\\)\\)</li> </ul> <p>The final wisdom of life requires not the annulment of incongruity but the achievement of serenity within and above it. \u2014 Reinhold Niebuhr</p>"},{"location":"DSP/Causal%20and%20Memoryless/","title":"Causal and Memoryless","text":"<p>Causal</p> <ul> <li>A system is causal if for every x[n], y[n] at any n is not affected by x[m] where \\(m&gt;n\\)</li> <li>In other words, for DT systems, to find a non-causal system's output would requires knowing input values which are in the future.</li> </ul> <p>Memoryless</p> <ul> <li>A system is memoryless if for every x[n], y[n] at any n is not affected by x[m] where \\(m&lt;n\\)</li> <li>In other words, for DT Causal systems, to find a memoryless system's output would only require knowing the input at that point. </li> </ul> <p>Things do not happen. Things are made to happen. \u2014 John F. Kennedy</p>"},{"location":"DSP/Cinc/","title":"Cinc","text":""},{"location":"DSP/Cinc/#the-basics-of-the-circular-sinc","title":"The Basics of the Circular Sinc","text":"The Equation \\[\\large cinc(f;\\beta)= \\frac{sin\\bigl(2\\beta +1)\\pi f\\bigr)}{(2\\beta +1)sin(\\pi f)}\\] Relationship to the Sinc Function <p>sdfasd</p> <p>Love is never lost. If not reciprocated, it will flow back and soften and purify the heart. \u2014 Washington Irving</p>"},{"location":"DSP/Circular%20Convolution/","title":"Circular Convolution","text":"Equation <p>Given two sequences \\(x[n]\\) and \\(h[n]\\) which are both defined on n=0,1,2,...,N-1, the circular convolution \\(z[n]\\) is \\(\\(\\LARGE z[n]=x[n]\\circledast h[n]=\\sum\\limits_{m=0}^{N-1}x[(m)_N]h[(n-m)_N]\\)\\)</p> Circular Indexing <p>\\((n-m)_N\\) is essentially n-m modulo N. In other words, n-m can be 0,1,2,...,N-1, but upon reaching N will wrap back around to 0</p> <ul> <li>In practice the way this n-m thing works is that \\(x[m]\\) is a constant, and we are walking backwards through \\(h[n]\\) as m increments</li> <li>This can be represented and solved fairly easily in matrix form, see Examples below</li> </ul> Examples <p>No valid plans for the future can be made by those who have no capacity for living now. \u2014 Alan Watts</p>"},{"location":"DSP/Circular%20Convolution/#matrix-example","title":"Matrix Example","text":"<p>Given that \\(x[n]\\)={1,2,5} and \\(h[n]\\)={4,-3,0,9}, Compute the 4-point circular convolution. 1. N=4 so zero pad; x[n]={1,2,5,0}. 2. \\(\\(\\begin{bmatrix}4 &amp; -3 &amp; 0 &amp; 9\\\\9 &amp; 4 &amp; -3 &amp; 0\\\\0 &amp; 9 &amp; 4 &amp; -3\\\\-3 &amp; 0 &amp; 9 &amp; 4\\end{bmatrix}\\begin{bmatrix}1\\\\2\\\\5\\\\0\\end{bmatrix}=\\begin{bmatrix}4+18+0+0=22\\\\-3+8+45=50\\\\0+-6+20+0=14\\\\9+0+-15+0=-6\\end{bmatrix}\\)\\) 3. \\(x[n] \\circledast h[n] = \\{22,50,14,-6\\}\\)</p>"},{"location":"DSP/Complex%20Sinusoid/","title":"Complex Sinusoid","text":"<p>Euler's Formula</p> <p>\\(\\(\\LARGE e^{ix}=cos(x)+isin(x)\\)\\) - Euler's formula basically states that a exponential raised to a imaginary value has both a real and a imaginary component - If we map the axis such that vertical is Imag. and horizontal is real, we find that our exponential raised to a imaginary value will appear to rotate CCW with increasing constant values, hence the sine and cosine - The magnitude of the complex value is constant. In other words, the only thing that is changing is the phase.     - Remember that complex magnitude discards j: \\(\\sqrt{cos^2(x)+sin^2(x)}=\\sqrt{1}=1\\), such that the magnitude of the the exponential will be 1 if there is no coefficient. - The exponential rotates with a periodicity of \\(x=2\\pi\\)</p> Complex Sinusoid <p>Here is our DSP Complex Sinusoid: \\(\\(\\LARGE x[n]=Xe^{j2\\pi fn}\\)\\) - X is a complex constant - \\(f\\) is Normalized Frequency - Note that the magnitude of the exponential term is always 1, so the magnitude at any n will be equal to X. In other words, X is the complex magnitude of the sinusoid     - Since X does not vary with n, the magnitude of this complex sinusoid will be constant!     - Notice that \\(\\large e^{-j \\frac{\\pi}{2}}=cos(\\frac{\\pi}{2})+jsin(\\frac{\\pi}{2})=0+j\\) </p> <p>A goal without a plan is just a wish. \u2014 Larry Elder</p>"},{"location":"DSP/Convolution/","title":"Convolution","text":"<p>Equation</p> <ul> <li>Convolution is most typically seen in the relationship between the Input, Output, and Impulse Response of a Discrete-Time Signal: </li> </ul> Array Method <p>Suppose \\(x[n]=\\{...,0,1,5,3,0,...\\}\\) and \\(h[n]=\\{...,0,7,4,1,0,...\\}\\) We can use the array method to solve for the linear convolution of x[n] and h[n]</p> <p></p> <p>The more man meditates upon good thoughts, the better will be his world and the world at large. \u2014 Confucius</p>"},{"location":"DSP/DFS/","title":"DFS","text":"Helpful Resource (DTFT, DFS, DFT) <p>https://ethz.ch/content/dam/ethz/special-interest/mavt/dynamic-systems-n-control/idsc-dam/Lectures/Signals-and-Systems/Lectures/Fall2018/SigSys_Lect5.pdf</p>"},{"location":"DSP/DFS/#the-basics","title":"The Basics","text":"DFT/DFS Representation of a Periodic Signal <p>The Discrete Fourier Series perfectly represents a periodic sequence \\(x[n]\\) as a series (sum) of sinusoids (or Complex Sinusoids).  - Below is the complex forms of the Synthesis (Discrete Frequency to Discrete Time), and Analysis (Discrete Time to Discrete Frequency) \\(\\(\\begin{array}{}\\LARGE x[n]=\\frac{1}{N}\\sum\\limits_{k=0}^{N-1}X[k]e^{j2\\pi \\frac{k}{N}n}\\\\\\text{Synthesis Equation, IDFS}\\\\\\LARGE X[k]=\\sum\\limits_{n=0}^{N-1}x[n]e^{-jk \\frac{2\\pi}{N}n}\\\\\\text{Analysis Equation, DFS}\\end{array}\\)\\) - Since \\(x[n]\\) is periodic, so is the DFS, with period N. - The lowest frequency sinusoid of the DFS is \\(\\large \\frac{2\\pi}{N}\\), aka the fundamental frequency - We need N complex exponentials to represent a DT periodic signal with period N. - Aka Discrete-Time Fourier Series (DTFS)</p> Example Coefficient Calculation (Analyzing Frequency Content of a Sequence) <p>Given the periodic sequence, \\(x[n]=\\{...,2,0,4,-5,2,0,4,-5,2,0,4,-5,...\\}\\), and that the first -5 is n=0 find the DFS coefficients \\(X[k]\\). (Alternative prompt for DFT: Given a sequence defined below, find the DFT coefficients for the sequence) \\(\\(x[n]=\\Bigl\\{ \\begin{array}{l}{-5,2,0,4},\\; \\text{ for } 0\\le n &lt;N \\\\0,\\; otherwise\\end{array}\\)\\) 1. The pattern repeats every 4 n, so N=4. 2. DFS Coefficients Definition: \\(\\large X[k]=\\sum\\limits_{n=0}^{N-1}x[n]e^{-jk \\frac{2\\pi}{N}n}\\) 3. Apply N=4: \\(\\large X[k]=\\sum\\limits_{n=0}^{3}x[n]e^{-jk \\frac{2\\pi}{4}n}\\)</p> <ol> <li> <p>Evaluate Sum: \\(\\large =x[0]e^{-jk \\frac{2\\pi}{4}0} + x[1]e^{-jk \\frac{2\\pi}{4}1} + x[2]e^{-jk \\frac{2\\pi}{4}2} + x[3]e^{-jk \\frac{2\\pi}{4}3}\\)</p> </li> <li> <p>Simplify: \\(=\\large -5(1) + 2e^{-jk \\frac{\\pi}{2}} + 0e^{-jk\\pi} + 4e^{-jk \\frac{3\\pi}{2}}\\)</p> <ol> <li>\\(\\large X[k]=-5 + 2e^{-jk \\frac{\\pi}{2}} + 4e^{-jk \\frac{3\\pi}{2}}\\)</li> </ol> </li> <li> <p>Find \\(\\{X[k]\\}\\): </p> <ol> <li>\\(\\large X[0]=-5 + 2e^{-j0 \\frac{\\pi}{2}} + 4e^{-j0 \\frac{3\\pi}{2}} = -5+2+4=1\\)</li> <li>\\(\\large X[1]=-5 + 2e^{-j\\frac{\\pi}{2}} + 4e^{-j\\frac{3\\pi}{2}} = -5+2(-j)+4(+j)=-5+2j\\)</li> <li>\\(\\large X[2]=-5 + 2e^{-j2\\frac{\\pi}{2}} + 4e^{-j2\\frac{3\\pi}{2}} = -5+2(-1)+4(-1)=-11\\)</li> <li>\\(\\large X[3]=-5 + 2e^{-j3\\frac{\\pi}{2}} + 4e^{-j3\\frac{3\\pi}{2}} = -5+2(+j)+4(-j)=-5-2j\\)</li> </ol> </li> <li> <p>Answer: \\(X[k]=\\{1,-5+2j,-11,-5-2j\\}\\)</p> </li> </ol> But what do the coefficients mean? (Synthesizing a signal from it's frequency content) <ul> <li>Let's use the previous example's coefficients:  \\(X[k]=\\{1,-5+2j,-11,-5-2j\\}\\)</li> <li>The Synthesis equation: \\(\\(\\LARGE x[n]=\\frac{1}{N}\\sum\\limits_{k=0}^{N-1}X[k]e^{j2\\pi \\frac{k}{N}n}\\)\\)</li> <li>If we manually build the sinusoid form of those coefficients using Eulers Formula, we'll find that all of the imaginary parts of the our equation will either cancel out or be zero-valued for integer values of n, leaving us with just the real portions at our sampling points: \\(\\(\\large x[n]=1-5cos(2\\pi \\frac{n}{4})-11cos(2\\pi \\frac{n}{2})-5cos(2\\pi \\frac{3n}{4})-2sin(2\\pi \\frac{n}{4})+2sin(2\\pi \\frac{3n}{4})\\)\\)</li> <li>Here is the graphical representation of the added real series (lined) and the original sequence (circles). Keep in mind that we could have also graphed the complex magnitude of the DFT, or graphed the imaginary part on it's own.  <pre><code>clear all\nx=[-5 2 0 4];\nm=0:3;\nn=0:0.1:3;\ny=1-5*cos(2*pi*n/4)+-11*cos(2*pi*n/2)+-5*cos(2*pi*3*n/4)-2*sin(2*pi*n/4)+2*sin(2*pi*3*n/4);\nplot(m,x,'o',n,y/4,'x');\ntitle(\"Real Fourier Series vs Real Periodic Sequence\")\nxlabel(\"Discrete Time, n\");\nylabel(\"Amplitude\")\nylim([-5.5,4.5]);\nxlim([-0.5,3.5]);\n</code></pre></li> </ul> <p>What we think, we become. \u2014 Buddha</p>"},{"location":"DSP/DFT/","title":"DFT","text":""},{"location":"DSP/DFT/#the-basics","title":"The Basics","text":"Definition <p>\"In mathematics, the discrete Fourier transform (DFT) converts a finite sequence of equally-spaced samples of a function into a same-length sequence of equally-spaced samples of the discrete-time Fourier transform (DTFT), which is a complex-valued function of frequency.\" -https://home.engineering.iastate.edu/~julied/classes/ee524/LectureNotes/l5.pdf</p> Equation <ul> <li>The DFT is the primary interval of the DFS, and is a sampling of the DTFT. \\(\\(\\begin{array}\\\\\\LARGE X_N[k]=\\sum\\limits_{n=0}^{N-1}x[n]e^{-j\\frac{2\\pi }{N} kn}\\\\\\text{N-Point DFT}\\end{array}\\)\\)</li> <li>Where:<ul> <li>N is the number of points in the DFT (you often choose this)<ul> <li>Zero-padding: In the case that \\(x[n]\\)'s non-zero range is smaller than N, we add on additional zeros to \\(x[n]\\). I.e. \\(X_8\\) would mean our input \\(x[n]=\\{4,3,2,1\\}\\) would turn into \\(x[n]=\\{4,3,2,1,0,0,0,0\\}\\) so that our DFT length could be found. MATLAB automatically assumes this is true when you try to calculate a DFT with more points than n values.</li> </ul> </li> <li>High-resolution vs. High Density: More points will produce a DFT that more closely resembles the DTFT (high-density), but does not reveal data that was not already in the DTFT. To get a high-resolution spectrum, you will need to get more samples from the original signal.</li> <li>k is which point of the DFT we are calculating, such that \\(\\bf{0\\leq k\\leq (N-1)}\\)</li> </ul> </li> <li>Evaluates the DTFT at discrete points, k, and calls each point \\(X[k]\\) </li> <li>Unlike the DTFT, the DFT is not Continuous in Frequency, the DFT has N discrete values. </li> </ul> Examples Example (Analysis) <ul> <li>Building on the example from the DTFT page, let's find the 4 point and 8 point DFT of the sequence, \\(x[n]=\\{1,1,1,1\\}\\)</li> <li>Insert maths here</li> <li>Here's a MATLAB plot of the DTFT, aswell as the 4 point (Green Fill), and 8 point (Red Circle) DFT. As you can see, the DFT is a sampling of the DTFT in frequency.  <pre><code>f=0:0.01:1; % normalized freq\nx=[1,1,1,1];\nX=1+exp(-j*2*pi*f)+exp(-j*2*pi*f*2)+exp(-j*2*pi*f*3); %DTFT of x\nX4=fft(x,4);\nf4=0:1/4:1-1/4;\nX8=fft(x,8);\nf8=0:1/8:1-1/8;\nplot(f,abs(X),f4,abs(X4),'x',f8,abs(X8),'o');\nxlabel(\"Normalized Frequency\");\nylabel(\"Complex Magnitude of the Fourier Transform\");\n</code></pre></li> </ul> <p>Happiness mainly comes from our own attitude, rather than from external factors. \u2014 Dalai Lama</p>"},{"location":"DSP/DFT/#example-calculation","title":"Example Calculation","text":"<p>![[302 DFT Example.PNG]]</p>"},{"location":"DSP/DFT/#zero-padded-dft","title":"Zero-Padded DFT","text":"<p>![[302 Zero-padded DFT.png]]</p>"},{"location":"DSP/DTFT/","title":"DTFT","text":""},{"location":"DSP/DTFT/#the-basics-of-the-dtft","title":"The Basics of the DTFT","text":"The DTFT: <p>The DTFT is a DT version of the Fourier Transform, often using Normalized Frequency, \\(f\\). \\(\\(\\LARGE X(e^{j2\\pi f})=\\sum\\limits_{n=-\\infty}^{\\infty}x[n]e^{-j2\\pi fn}\\)\\) - The DTFT is also known as the Spectrum of a Signal or Sequence. - The DTFT is a continuous function of frequency.</p> <p>The Inverse DTFT: \\(\\(\\LARGE x[n]=\\int\\limits_{-0.5}^{0.5}X(e^{j2\\pi f})e^{j2\\pi f}df\\)\\) - Note that the integral limits of Normalized Frequency could be different depending on the desired range. As long as an entire period is captured, and you are being consistent, it shouldn't matter too much.</p> Periodicity of the DTFT <p>Note that the DTFT is periodic. Since it is a sum of sinusoids, which all have frequency multiples of \\(2\\pi\\), the longest period will be when \\(n=1\\), such that \\(\\large e^{-j2\\pi f}\\). This specific Complex Sinusoid has a period of \\(2\\pi\\), so it will go through a full period every full integer multiple of \\(f\\). Therefore, we only need to plot a range of \\(f=[0,1)\\) or \\(f=[-0.5,0.5)\\)</p> Example (Analysis) <ul> <li>Let \\(x[n]=\\{1,1,1,1\\}\\) (0 otherwise) and \\(n=0..3\\). Find the DTFT of the given signal</li> <li>DTFT: \\(\\large X(e^{j2\\pi f})=\\sum\\limits_{n=-\\infty}^{\\infty}x[n]e^{-j2\\pi fn}\\)</li> <li>Because \\(x[n]\\) is 0 outside of \\(0\\le n \\le 3\\), we can simplify the sum neatly: \\(=x[0]e^{-j2\\pi f0}+x[1]e^{-j2\\pi f1}+x[2]e^{-j2\\pi f2}+x[3]e^{-j2\\pi f3}\\)</li> <li>Subbing in the values for \\(x[n]\\), we get: \\(X(e^{j2\\pi f})=1+e^{-j2\\pi f}+e^{-j4\\pi f}+e^{-j6\\pi f}\\)</li> <li>Notice that our output of the DTFT function is a continuous function of frequency.  MATLAB Code: ``` f=0:0.01:1; % normalized freq</li> </ul> <p>X=1+exp(-j2pif)+exp(-j2pif2)+exp(-j2pif*3); plot(f,abs(X)); xlabel(\"Normalized Frequency\"); ylabel(\"Complex Magnitude of the DTFT\");</p> <p>```</p>"},{"location":"DSP/DTFT/#interpreting-the-spectrum","title":"Interpreting the Spectrum","text":"The Spectrum <ul> <li>A \"Spectrum\" is the DTFT of a Signal or Sequence. Typically if it's the DTFT of a System's Impulse Response, we call it a Frequency Response instead.</li> <li>Typically broken into two parts:<ul> <li>Amplitude Spectrum: \\(|Y (e^{j2\\pi f})|=|H (e^{j2\\pi f})||X (e^{j2\\pi f})|\\)</li> <li>Phase Spectrum: \\(\\angle Y (e^{j2\\pi f})=\\angle H (e^{j2\\pi f})+\\angle X (e^{j2\\pi f})\\)</li> </ul> </li> <li>Depending on what you are working with, you may be more or less concerned with the phase spectrum.<ul> <li>For instance, in audio applications, we hear amplitude, but not phase.</li> </ul> </li> </ul>"},{"location":"DSP/DTFT/#comparison-between-domains-and-signalssystem","title":"Comparison between Domains and Signals/System","text":"<p>Friendship... is not something you learn in school. But if you haven't learned the meaning of friendship, you really haven't learned anything. \u2014 Muhammad Ali</p>"},{"location":"DSP/Digital%20Signal%20Processing/","title":"Digital Signal Processing","text":"<p>Here's a rough outline of the DSP stuff we did</p> <ul> <li>DSP<ul> <li>Discrete-Time</li> <li>Systems<ul> <li>Properties<ul> <li>Causal</li> <li>LTI</li> </ul> </li> <li>Impulse Response</li> </ul> </li> <li>Signals<ul> <li>Energy and Power</li> <li>Common Shapes<ul> <li>Sinc</li> <li>Cinc</li> </ul> </li> </ul> </li> <li>Frequency Analysis<ul> <li>Complex Sinusoid</li> <li>Aliasing</li> <li>Normalized Frequency</li> <li>Fourier Transform<ul> <li>DTFT<ul> <li>Frequency Response</li> </ul> </li> <li>DFT</li> <li>DFS</li> <li>[[FFT]]</li> </ul> </li> <li>Spectrum</li> </ul> </li> <li>Filter<ul> <li>Ideal Filters</li> </ul> </li> <li>Block Diagrams</li> <li>Z Transforms?</li> <li>S Transforms????</li> <li>Convolution<ul> <li>Circular Convolution</li> </ul> </li> </ul> </li> </ul> <p>Everything you are against weakens you. Everything you are for empowers you. \u2014 Wayne Dyer</p>"},{"location":"DSP/Discrete%20Fourier%20Transform/","title":"Discrete Fourier Transform","text":""},{"location":"DSP/Discrete%20Fourier%20Transform/#the-basics","title":"The Basics","text":"Definition <p>\"In mathematics, the discrete Fourier transform (DFT) converts a finite sequence of equally-spaced samples of a function into a same-length sequence of equally-spaced samples of the discrete-time Fourier transform (DTFT), which is a complex-valued function of frequency.\" -https://home.engineering.iastate.edu/~julied/classes/ee524/LectureNotes/l5.pdf</p> Equation <ul> <li>The DFT is the primary interval of the DFS, and is a sampling of the DTFT. $$</li> </ul> <p>\\begin{array}\\\\LARGE X_N[k]=\\sum\\limits_{n=0}{N-1}x[n]e{-j\\frac{2\\pi }{N} kn}\\ \\text{N-Point DFT} \\end{array}$$</p> <ul> <li>Where:</li> <li>N is the number of points in the DFT (you often choose this)<ul> <li>Zero-padding: In the case that \\(x[n]\\)'s non-zero range is smaller than N, we add on additional zeros to \\(x[n]\\). I.e. \\(X_8\\) would mean our input \\(x[n]=\\{4,3,2,1\\}\\) would turn into \\(x[n]=\\{4,3,2,1,0,0,0,0\\}\\) so that our DFT length could be found. MATLAB automatically assumes this is true when you try to calculate a DFT with more points than n values.</li> </ul> </li> <li>High-resolution vs. High Density: More points will produce a DFT that more closely resembles the DTFT (high-density), but does not reveal data that was not already in the DTFT. To get a high-resolution spectrum, you will need to get more samples from the original signal.</li> <li>k is which point of the DFT we are calculating, such that \\(\\bf{0\\leq k\\leq (N-1)}\\)</li> <li>Evaluates the DTFT at discrete points, k, and calls each point \\(X[k]\\) </li> <li>Unlike the DTFT, the DFT is not Continuous in Frequency, the DFT has N discrete values. </li> </ul> Examples Example (Analysis) <ul> <li>Building on the example from the DTFT page, let's find the 4 point and 8 point DFT of the sequence, \\(x[n]=\\{1,1,1,1\\}\\)</li> <li>Insert maths here</li> <li>Here's a MATLAB plot of the DTFT, aswell as the 4 point (Green Fill), and 8 point (Red Circle) DFT. As you can see, the DFT is a sampling of the DTFT in frequency.   ``` f=0:0.01:1; % normalized freq</li> </ul> <p>x=[1,1,1,1]; X=1+exp(-j2pif)+exp(-j2pif2)+exp(-j2pif*3); %DTFT of x X4=fft(x,4); f4=0:1/4:1-1/4; X8=fft(x,8); f8=0:1/8:1-1/8; plot(f,abs(X),f4,abs(X4),'x',f8,abs(X8),'o'); xlabel(\"Normalized Frequency\"); ylabel(\"Complex Magnitude of the Fourier Transform\");</p> <p>```</p> <p>Happiness mainly comes from our own attitude, rather than from external factors. \u2014 Dalai Lama</p>"},{"location":"DSP/Discrete%20Fourier%20Transform/#example-calculation","title":"Example Calculation","text":"<p>![[302 DFT Example.PNG]]</p>"},{"location":"DSP/Discrete%20Fourier%20Transform/#zero-padded-dft","title":"Zero-Padded DFT","text":"<p>![[302 Zero-padded DFT.png]]</p>"},{"location":"DSP/Discrete-Time%20Signal/","title":"Discrete Time Signal","text":"Breaking Down the Name <ul> <li>Discrete: finite equally-spaced values, rather than infinitesimally smaller-spaced values.  </li> <li>Signal: some action that is used to convey information or instructions. E.g. voltage, current, or power.</li> <li>Discrete Time: a sampling (some portion of) Continuous Time </li> <li>Discrete-Time Signal: an action measured across finite equally-spaced values of time</li> </ul> Notation <ul> <li>\\(x[n]\\) implies x exists at discrete values of t<ul> <li>Typically n is an integer value.</li> <li>n is synonymous with sample. E.g n=0 is the first sample, n=1 is the second sample...(beware, though, MATLAB is not zero indexed)</li> </ul> </li> <li>\\(x(t)\\) implies x exists at continuous values of t1</li> <li>\\(x[n]=x(nT_s)\\) where<ul> <li>Ts is the Sampling Interval, the reciprocal of the [[Sampling Frequency]]</li> </ul> </li> </ul> <p>Discrete:  Continious: </p> <p>Where there is charity and wisdom, there is neither fear nor ignorance. \u2014 Francis of Assisi</p> <ol> <li> <p>x(t) is not necessarily guaranteed to be continuous on it's entire domain.\u00a0\u21a9</p> </li> </ol>"},{"location":"DSP/Discrete-Time%20Unit%20Functions/","title":"Discrete Time Unit Functions","text":"The Basics <ul> <li>Unit: simple. These are building blocks for describing more complicated waveforms. </li> <li>The point of interest is n=0 by default, but can be shifted. I.e. at n=0, the unit ramp function changes slope.</li> <li>See Discrete-Time</li> </ul> Unit Impulse <ul> <li>The (discrete time) unit impulse is 1 where the inner term is 0, and 0 everywhere else. </li> <li>The Sifting Property of the Unit Impulse: Because the impulse function is 1 in only 1 spot, we can chain unit impulse functions like so using the literal values of the output to create the equivalent DT signal. <ul> <li></li> </ul> </li> </ul> <p>...todo, add Unit Step, Unit Ramp</p> <p>Meaning is not what you start with but what you end up with. \u2014 Peter Elbow</p>"},{"location":"DSP/Fourier%20Transform/","title":"Fourier Transform","text":"<p>In essence, the Fourier transform is the decomposition of signals into a sum of Complex Sinusoids of varying frequencies. With a frequency representation, we get a clearer representation of the signal's makeup. For instance, if we took a Fourier Transform of an audio signal, we might be able to easily see noise at 60 Hz from the power grid. As with most transforms, we can go both ways; towards frequency (Analysis) and towards time (Synthesis/Inverse).</p>"},{"location":"DSP/Fourier%20Transform/#the-basics","title":"The Basics","text":"A helpful 3Blue1Brown Video Why Fourier is Important <p> - Fourier transforms are all about taking a signal or sequence and thinking about it as a series (sum) of sine and cosine waves. - Oftentimes we only see the sum of all the smaller components (the yellow line above) - Typically, our goal is to:      - 1. Identify frequency makeup (the individual sinusoids which could represent our signal)     - 2. Do something to a particular group of frequencies, in which case we need a frequency representation of a signal so that we can scale desired portions appropriately.**</p> Building the Continuous Fourier Transform from the Ground-Up <p> - 3Blue1Brown shows it in a pretty elegant way in this picture.     - At the top, we have the input signal. It's got a constant frequency or set of frequencies.     - On the bottom left, we have a 2D graph on the Complex Plane.         - We create this graph by \"winding\"- using the amplitude of the graph sampled at some other frequency. You can visually see the periods of this other frequency as the dotted lines on the top graph.         - Rotating with the other frequency, the radius from the origin at each angle is determined by the sampled real magnitude of the input.          - Then we look at the center of mass about the plane. If the center of mass is near the origin, that means that the frequency we are winding with does not have a strong correlation with any particular amplitude. If it is leaning to one side, that means that we have roughly the same amplitude in the same places every revolution.     - On the bottom right, we have the real value of the center of mass of the circle.          - As we change the winding frequency, we begin to see the full picture- where the center of mass has little to no correlation, and where it is strongly pulled to one direction. In this way we can differentiate between the different frequencies.          - If we do this continuously, we are essentially creating the Spectrum.  - Roughly speaking, \\(\\(\\begin{array}{} X(e^{j2\\pi F})\\approx \\frac{1}{(t_2-t_1)}\\int\\limits_{t_1}^{t_2}g(t)e^{-j2\\pi Ft}dt\\\\\\text{The \"Almost\" Continious Time Fourier Transform}\\end{array}\\)\\)  - In other words, the Fourier Transform is essentially really just the mean of a function that is rotated around a circle at \\(F\\) cycles/second over time interval \\(t_{2}\\) to \\(t_1\\)  - The only real distinction is that rather than the average over time, we usually just find the total sum. This is just a scaling difference, so the graph is essentially the same.  - The negative in the complex exponential is there because the convention is to rotate CW rather than CCW. \\(\\(\\LARGE \\begin{array}{} X(e^{j2\\pi F}) = \\int\\limits_{t_1}^{t_2}g(t)e^{-j2\\pi Ft}dt\\\\\\text{The Continious Time Fourier Transform}\\end{array}\\)\\)  - Keep in mind that the Fourier Transform typically produces Complex coefficients, so oftentimes you will need to explicitly find the Magnitude to correctly work with in the frequency domain.</p>"},{"location":"DSP/Fourier%20Transform/#discrete-fourier","title":"Discrete Fourier","text":"Continuous-Time to a Discrete-Time Representation <ul> <li>Oftentimes in reality, we are sampling a real thing to obtain a partial understanding of a continuous thing -&gt; Continuous input \\(g(t)\\) replaced with DT input \\(x[n]\\).   </li> <li>Due to sampling, the notion of Normalized Frequency results from substituting \\(\\large \\frac{n}{F_{s}}\\) for \\(t\\)</li> <li>This also brings in issues related to Aliasing</li> <li>Since we are really just evaluating at specific values of \\(n\\), we can simplify the integral into a sum at integer multiples of \\(n\\).</li> <li>The Discrete-Time Fourier Transform is almost exactly the same as the Continuous Time version described above. See it's page for more details \\(\\(\\begin{array}{}\\LARGE X(e^{j2\\pi f})=\\sum\\limits_{n=-\\infty}^{\\infty}x[n]e^{-j2\\pi fn}\\\\\\text{The DTFT}\\end{array}\\)\\)</li> </ul> Discrete (Time and Frequency) Fourier Transform <ul> <li>If we take sample the DTFT on it's frequency axis, we get the Discrete Fourier Series and DFT, which are Discrete in both Time and Frequency. Typically, these (particularly the DFT) are used, because they are much easier for computers to calculate than the continuous DTFT \\(\\(\\begin{array}{}\\LARGE X[k]=\\sum\\limits_{n=0}^{N-1}x[n]e^{-jk \\frac{2\\pi}{N}n}\\\\\\text{The DFS and DFT (Analysis Equation)}\\end{array}\\)\\)</li> <li>Where \\(X[k]\\) is the k-th coefficient of the DFT/DFS, j is the imaginary unit, and the sum is taken over the length of one period of the sequence (DFS) or the length of the sequence (DFT). </li> <li>DFS describes infinite-length, periodic signals, whereas the DFT describes finite-length signals. A good discussion can be seen here, https://dsp.stackexchange.com/a/18157. The output of this equation will be the exact same for a DFT and a DFS.</li> </ul> What Fourier do I apply?"},{"location":"DSP/Fourier%20Transform/#domain-comparison","title":"Domain Comparison","text":"Item [[Discrete-Time Signal|Discrete-Time]] Frequency System \\(h[n]\\) Impulse Response \\(\\large H(e^{j2\\pi f})\\) Frequency Response Signal \\(x[n]\\) Sequence \\(\\large X(e^{j2\\pi f})\\) [[DTFT|Spectrum]] Output \\(y[n]=x[n]\\ast h[n]\\) Convolution \\(Y(e^{j2\\pi f})=H(e^{j2\\pi f})X(e^{j2\\pi f})\\) Multiplication! Units Units Units/Normalized Freq <p>If opportunity doesn't knock, build a door. \u2014 Milton Berle</p>"},{"location":"DSP/Frequency%20Response/","title":"Frequency Response","text":""},{"location":"DSP/Frequency%20Response/#the-basics","title":"The Basics","text":"Equation <ul> <li>The Frequency Response Characteristic is the Impulse Response of a LTI system to a Complex Sinusoid</li> <li>Also known as the DTFT of \\(h[n]\\) and the Frequency Response Characteristic \\(\\(\\LARGE H(e^{j2\\pi f})=\\sum\\limits_{k=-\\infty}^{\\infty}h[k]e^{-j2\\pi fk}\\)\\)</li> <li>\\(H(e^{j2\\pi f})\\) exists for every BIBO Stable LTI system as well as some that are not stable</li> <li>Is similar to [[Transfer Function]]: \\(\\(\\large y[n]=H(e^{j2\\pi f})Xe^{j2\\pi fn}\\)\\) \\(\\(\\large Xe^{j2\\pi f}\\xrightarrow{h[n]}Ye^{j2\\pi f}\\)\\)</li> </ul> Derivation <ol> <li>Definition of Impulse Response and Convolution \\(\\(\\large y[n]=x[n]\\ast h[n]=\\sum\\limits_{k=-\\infty}^{\\infty}x[n-k]h[k]\\)\\)</li> <li>Replace input with a Complex Sinusoid \\(\\(\\large =\\sum\\limits_{k=-\\infty}^{\\infty}Xe^{j2\\pi f(n-k)}h[k]\\)\\)</li> <li>Pull out piece which does not vary with k \\(\\(\\large =Xe^{j2\\pi f(n)}\\bigg(\\sum\\limits_{k=-\\infty}^{\\infty}e^{-j2\\pi fk}h[k]\\bigg)\\)\\)</li> <li>Rewrite terms as freq. resp. \\(\\(\\LARGE =Xe^{j2\\pi fn}H(e^{j2\\pi f})\\)\\)</li> <li>The response of an LTI system to a sinusoidal input will be a sinusoid with the same frequency<ul> <li>Because both the input and the response have the same frequency, the output will too!</li> </ul> </li> </ol> Periodicity <ul> <li>\\(H(e^{j2\\pi f})\\) is periodic with a period of 1:<ul> <li>\\(H(e^{j2\\pi (f+1)})=H(e^{j2\\pi f})\\)</li> <li>(Period of sine and cosine is 2pi, so sin(2pif) has a period of 1)</li> </ul> </li> <li>See Normalized Frequency</li> </ul> Examples <p>Let us sacrifice our today so that our children can have a better tomorrow. \u2014 A. P. J. Abdul Kalam</p>"},{"location":"DSP/Frequency%20Response/#example-calculation-using-dtft-of-impulse-response","title":"Example Calculation using DTFT of Impulse Response","text":""},{"location":"DSP/Frequency%20Response/#example-calculation-using-definition-of-complex-sinusoid","title":"Example Calculation using definition of Complex Sinusoid","text":""},{"location":"DSP/Ideal%20Filters/","title":"Ideal Filters","text":""},{"location":"DSP/Ideal%20Filters/#the-basics","title":"The Basics","text":"What are Filters <p>You can't blame gravity for falling in love. \u2014 Albert Einstein</p>"},{"location":"DSP/Impulse%20Response/","title":"Impulse Response","text":"<p>The Impulse Response \\(h[n]\\)</p> <ul> <li>Replace __ in a DT Signal<ul> <li>x[n] with \\(\\delta[n]\\)</li> <li>y[n] with \\(h[n]\\)</li> </ul> </li> <li>The impulse response of a system completely defines it's input/output properties...In other words, h[n] is an alternate way of describing y[n] in terms of x[n] without the [[Difference Equation]].<ul> <li>See Convolution, which states that \\(x[n]\\ast h[n]=y[n]\\) </li> </ul> </li> </ul> <p>The strong bond of friendship is not always a balanced equation; friendship is not always about giving and taking in equal shares. Instead, friendship is grounded in a feeling that you know exactly who will be there for you when you need something, no matter what or when. \u2014 Simon Sinek</p>"},{"location":"DSP/Linear%20and%20Time%20Invariant%20Systems/","title":"Linear and Time Invariant Systems","text":"<p>A LTI system is both Linear and Time Invariant.</p> Linear <p>A linear system is additive and homogenous. </p> <p>Additive</p> <ul> <li>Requires that for any two inputs \\(x_{1}[n]\\) and \\(x_{2}[n]\\), where \\(Lx_1[n]\\rightarrow y_1[n]\\) and given system L \\(Lx_2[n]\\rightarrow y_2[n]\\): \\(\\(Lx=y\\rightarrow L(x_1+x_2)\\ne y_1+y_2\\)\\)</li> <li>Aka, replace x with the two inputs, then set them equal to the sum of the two inputs.</li> <li>Basically, this test fails if the [[Difference Equation]] is not a linear one (i.e. sinusoidal or exponential) or if there is a intercept that does not scale with the input.</li> </ul> <p>Homogenous</p> <ul> <li>Requires that for any scalar k and input x, \\(kx\\rightarrow ky\\). This will fail when there is an intercept or input invariant part.  \\(\\(kx[n]+1\\ne k(x[n]+1)\\)\\)</li> </ul> Time Invariant <ul> <li>A delay in the input results in a corresponding delay in the output. </li> <li>E.g. given system L, input x, and output y,  \\(\\(Lx=y \\rightarrow Lx[n-m]=y[n-m]\\)\\)</li> </ul> <p>Always be yourself, express yourself, have faith in yourself, do not go out and look for a successful personality and duplicate it. \u2014 Bruce Lee</p>"},{"location":"DSP/Normalized%20Frequency/","title":"Normalized Frequency","text":""},{"location":"DSP/Normalized%20Frequency/#the-basics","title":"The Basics","text":"What is Normalized Frequency <ul> <li>Normalized Frequency \\(f\\) (unitless): (\\(f=\\frac{F}{F_s}\\)\\)<ul> <li>Where <ul> <li>\\(F\\) is the winding frequency of the Fourier Transform in Hz.</li> <li>\\(F_s\\) is the Sampling Frequency in Hz, and \\(T_s\\) is the Sampling Interval/Period in Seconds/Revolution.</li> </ul> </li> <li>Typically restricted to a range of \\(0\\le f  &lt; 1\\), because of the periodicity of the sinusoids, often restricted further due to Aliasing</li> <li>Sometimes rewritten equivalently as \\(-\\frac{1}{2}\\le f &lt; \\frac{1}{2}\\) </li> <li>Negative frequency causes \\(-jsin(..)\\) and \\(cos(..)\\). In other words, we rotate in the opposite direction as before.</li> </ul> </li> <li>However, some usages define it in radians, aka Angular Frequency, by squashing \\(j2\\pi f\\) into \\(j \\omega\\):  (\\(\\omega= 2\\pi \\frac{F}{F_s}=2\\pi f\\)\\)<ul> <li>Where \\(0\\le \\omega &lt; 2\\pi\\)      radians</li> </ul> </li> </ul> Where does Normalized Frequency come from? <ul> <li>Normalized frequency is a result of the transition from a continuous-time to a discrete time representation.<ul> <li>In CT, we might write a Complex Sinusoid as  \\(\\(\\large e^{j2\\pi Ft}\\)\\)</li> <li>Where:<ul> <li>\\(F\\) is the winding frequency in revolutions/second (Hz) (because of the addition of the \\(2\\pi\\), the radian part is extracted out of F). For more info on this \"winding frequency\" see Fourier Transform.</li> <li>\\(t\\) is CT. Our input variable. \\(Ft2\\pi\\) yields the current rotational position in radians. </li> </ul> </li> <li>In DT, we want to abstract away \\(t\\) for \\(n\\), so we use the relation, \\(\\large t=T_{s}n\\). This comes from the fact that each value of t is separated by an integer multiple (\\(n\\)) of sampling periods (\\(T_{s}\\))</li> <li>Typically, though, it's unwieldy to have to consider the sampling period of our system or our signal whenever we want to do this math</li> <li>\\(\\large t=\\frac{n}{F_{s}}\\)</li> <li>Substitute: \\(\\large \\frac{F}{F_s}n\\)</li> <li>Redefine terms: \\(\\large \\frac{F}{F_{s}}=f\\) </li> </ul> </li> </ul> <p>Bad times have a scientific value. These are occasions a good learner would not miss. \u2014 Ralph Waldo Emerson</p>"},{"location":"Features/LaTeX%20Math%20Support/","title":"LaTeX Math Support","text":"<p>LaTeX math is supported using MathJax.</p> <p>Inline math looks like \\(f(x) = x^2\\). The input for this is <code>$f(x) = x^2$</code>. Use <code>$...$</code>.</p> <p>For a block of math, use <code>$$...$$</code> on separate lines</p> <pre><code>$$\nF(x) = \\int^a_b \\frac{1}{2}x^4\n$$\n</code></pre> <p>gives </p> \\[ F(x) = \\int^a_b \\frac{1}{2}x^4 \\]"},{"location":"Features/Mermaid%20Diagrams/","title":"Mermaid diagrams","text":"<p>Here's the example from MkDocs Material documentation: </p> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n</code></pre>"},{"location":"Features/Text%20Formatting/","title":"Text Formatting","text":"<p>You can have lists like this</p> <ul> <li>first</li> <li>second</li> <li>third</li> </ul> <p>Or checklist lists to</p> <ul> <li> Get</li> <li> things</li> <li> done</li> </ul> <p>Also, get highlights and strikethroughs as above (similar to Obsidian).</p> <p>More formatting options for your webpage here. (but not compatible with Obsidian)</p>"},{"location":"Topic%201/Note%201/","title":"Note 1","text":"<p>Example: link to Mermaid Diagrams under <code>Features</code></p>"},{"location":"Topic%201/Note%202/","title":"Note 2","text":""}]}